{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","show","setShow","showw","setShoww","showww","setShowww","className","id","onClick","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAgDeA,MA7Cf,WAAgB,IAAD,EAEQC,oBAAS,GAFjB,mBAENC,EAFM,KAEDC,EAFC,OAGUF,oBAAS,GAHnB,mBAGNG,EAHM,KAGAC,EAHA,OAIYJ,oBAAS,GAJrB,mBAINK,EAJM,KAICC,EAJD,KAMb,OAEE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,oBAAIA,UAAU,QAAd,sBACE,sBAAKA,UAAU,MAAf,UAEE,wBAAQA,UAAU,UAAUC,GAAG,MAAMC,QAAS,kBAAIP,GAAQ,IAA1D,iBAECD,EACD,wBAAQQ,QAAS,kBAAIL,GAAS,IAAOG,UAAU,eAA/C,gCACC,KAEAJ,EACD,qBAAKK,GAAG,QAAR,SACE,sBAAKA,GAAG,QAAR,UAEE,sDACA,wBAAQD,UAAU,YAAYE,QAAS,kBAAIH,GAAU,IAArD,iBACA,wBAAQC,UAAU,WAAWE,QAAS,kBAAMC,OAAOC,SAASC,QAAO,IAAnE,qBAIH,KAEAP,EACD,qBAAKG,GAAG,QAAR,SAEE,kDAGD,cC5BEK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.eaf0cca8.chunk.js","sourcesContent":["import './App.css';\nimport React,{useState} from 'react';\n\nfunction App() {\n\n  const [show,setShow]=useState(false)\n  const [showw,setShoww]=useState(false)\n  const [showww,setShowww]=useState(false)\n  \n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"texty\">App Test</h1>\n          <div className=\"box\">\n\n            <button className=\"buttonn\" id=\"run\" onClick={()=>setShow(true)}>Run</button>\n\n            {show?\n            <button onClick={()=>setShoww(true)} className=\"notification\">Test Notification!</button>\n            :null}\n\n            {showw?\n            <div id=\"onapp\">\n              <div id=\"popup\">\n\n                <h5>Confirm Going To App</h5>\n                <button className=\"buttonyes\" onClick={()=>setShowww(true)}>Yes</button>\n                <button className=\"buttonno\" onClick={() => window.location.reload(false)}>No</button>\n            \n              </div>\n            </div>\n            :null}\n\n            {showww?\n            <div id=\"onapp\">\n\n              <h1>Loading App...</h1>\n          \n            </div>\n            :null}\n\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}